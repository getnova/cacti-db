plugins {
  id 'java'
  id 'io.freefair.git-version' version '5.1.1'
  id 'io.freefair.lombok' version '5.1.1'
  id 'io.freefair.javadoc-utf-8' version '5.1.1'
  id 'checkstyle'
}

group 'net.getnova.backend.module'
version version.toString().startsWith('v') ? version.toString().substring(1) : version

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

repositories {
  maven {
    url "https://dl.bintray.com/getnova/maven"
  }
  jcenter()
}

dependencies {
  annotationProcessor("org.springframework:spring-context-indexer:5.2.8.RELEASE")

  implementation('net.getnova.backend:nova-api:edge')
  implementation('net.getnova.backend:nova-boot:edge')
  implementation('net.getnova.backend:nova-data-jpa:edge')
  implementation('net.getnova.backend:nova-json:edge')
}

jar {
  manifest {
    attributes([
      'Specification-Title'     : project.name,
      'Specification-Vendor'    : 'Nova Project (https://github.com/getnova)',
      'Specification-Version'   : project.version,
      'Implementation-Title'    : project.name,
      'Implementation-Version'  : project.version,
      'Implementation-Vendor'   : 'Nova Project (https://github.com/getnova)',
      'Implementation-Timestamp': new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ'),
      'Module-Name'             : project.name,
      'Module-Version'          : project.version,
      'Module-Main-Class'       : 'net.getnova.backend.cacti.CactiDatabase'
    ])
  }

//  from {
//    configurations.implementation.collect { it.isDirectory() || it.getName().toLowerCase().endsWith('.pom') ? it : zipTree(it) }
//  }
}

lombok {
  config.put('lombok.equalsandhashcode.callsuper', 'CALL')
}

def checkstyleDir = "${rootDir}/config/checkstyle"

tasks.withType(Checkstyle) {
  reports {
    xml.enabled false
    html.enabled true
  }
}

checkstyleMain {
  configFile = file("${checkstyleDir}/main.xml")
}

checkstyleTest {
  configFile = file("${checkstyleDir}/test.xml")
}

javadoc {
  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}
